//bst
#include <iostream>
#include <vector>
#include <climits>

using namespace std;
bool isBST(const vector<int>& arr, int index, int min_val, int max_val) {
    if (index >= arr.size()) {
        return true;
    }
    
    if (arr[index] < min_val || arr[index] > max_val) {
        return false;
    }
    return isBST(arr, 2 * index, min_val, arr[index] - 1) &&
           isBST(arr, 2 * index + 1, arr[index] + 1, max_val);
}
void checkBST(const vector<int>& arr, int N) {
    if (isBST(arr, 1, INT_MIN, INT_MAX)) {
        cout << "True" << endl;
    } else {
        cout << "False" << endl;
    }
}

int main() {
    int T;
    cin >> T;
    
    vector<vector<int>> test_cases(T);
    vector<int> node_counts(T);
    
    for (int i = 0; i < T; ++i) {
        cin >> node_counts[i];
        test_cases[i].resize(node_counts[i] + 1); 
        
        for (int j = 1; j <= node_counts[i]; ++j) {
            cin >> test_cases[i][j];
        }
    }
    
    for (int i = 0; i < T; ++i) {
        checkBST(test_cases[i], node_counts[i]);
    }
    
    return 0;
}
